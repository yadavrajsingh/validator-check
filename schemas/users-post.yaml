post:
  tags:
    - pet
  operationId: postUser
  produces:
    - application/json; charset=utf-8
  responses:
    "201":
      description: User created
      schema:
        allOf:
          - $ref: "https://raw.githubusercontent.com/yadavrajsingh/validator-check/schemas-check/schemas/userResponses.yaml"
          - $ref: "https://raw.githubusercontent.com/yadavrajsingh/validator-check/schemas-check/schemas/warningResponse.yaml"
      headers:
        $ref: "https://raw.githubusercontent.com/yadavrajsingh/validator-check/schemas-check/schemas/headers.yaml"
      examples:
        application/json:
          { "body": [{ "userId": 123, "userName": "Mark Crane" }] }

    "400":
      description: Bad Request
      schema:
        $ref: "https://raw.githubusercontent.com/yadavrajsingh/validator-check/schemas-check/schemas/errorResponse.yaml"
      headers:
        $ref: "https://raw.githubusercontent.com/yadavrajsingh/validator-check/schemas-check/schemas/headers.yaml"
      examples:
        application/json:
          { "errors": [{ "code": "400", "message": "Bad Request" }] }
    "401":
      description: Unauthorized
      schema:
        $ref: "https://raw.githubusercontent.com/yadavrajsingh/validator-check/schemas-check/schemas/errorResponse.yaml"
      headers:
        $ref: "https://raw.githubusercontent.com/yadavrajsingh/validator-check/schemas-check/schemas/headers.yaml"
      examples:
        application/json:
          { "errors": [{ "code": "401", "message": "Unauthorized" }] }
    "404":
      description: Not Found
      schema:
        $ref: "https://raw.githubusercontent.com/yadavrajsingh/validator-check/schemas-check/schemas/errorResponse.yaml"
      headers:
        $ref: "https://raw.githubusercontent.com/yadavrajsingh/validator-check/schemas-check/schemas/headers.yaml"
      examples:
        application/json:
          { "errors": [{ "code": "404", "message": "Not Found" }] }
    "405":
      description: Method Not Allowed
      schema:
        $ref: "https://raw.githubusercontent.com/yadavrajsingh/validator-check/schemas-check/schemas/errorResponse.yaml"
      headers:
        $ref: "https://raw.githubusercontent.com/yadavrajsingh/validator-check/schemas-check/schemas/headers.yaml"
      examples:
        application/json:
          { "errors": [{ "code": "405", "message": "Method Not Allowed" }] }
    "406":
      description: Not Acceptable
      schema:
        $ref: "https://raw.githubusercontent.com/yadavrajsingh/validator-check/schemas-check/schemas/errorResponse.yaml"
      headers:
        $ref: "https://raw.githubusercontent.com/yadavrajsingh/validator-check/schemas-check/schemas/headers.yaml"
      examples:
        application/json:
          { "errors": [{ "code": "406", "message": "Not Acceptable" }] }
    "429":
      description: Too Many Requests
      schema:
        $ref: "https://raw.githubusercontent.com/yadavrajsingh/validator-check/schemas-check/schemas/errorResponse.yaml"
      headers:
        $ref: "https://raw.githubusercontent.com/yadavrajsingh/validator-check/schemas-check/schemas/headers.yaml"
      examples:
        application/json:
          { "errors": [{ "code": "429", "message": "Too Many Requests" }] }
    "500":
      description: Server Error
      schema:
        $ref: "https://raw.githubusercontent.com/yadavrajsingh/validator-check/schemas-check/schemas/errorResponse.yaml"
      headers:
        $ref: "https://raw.githubusercontent.com/yadavrajsingh/validator-check/schemas-check/schemas/headers.yaml"
      examples:
        application/json:
          {
            "errors":
              [{ "code": "500", "message": "Internal Server Error" }],
          }
    "503":
      description: Service Unavailable
      schema:
        $ref: "https://raw.githubusercontent.com/yadavrajsingh/validator-check/schemas-check/schemas/errorResponse.yaml"
      headers:
        $ref: "https://raw.githubusercontent.com/yadavrajsingh/validator-check/schemas-check/schemas/headers.yaml"
      examples:
        application/json:
          {
            "errors": [{ "code": "503", "message": "Service Unavailable" }],
          }
